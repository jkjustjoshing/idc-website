---
import showdown from 'showdown'
import Layout from '@/layouts/Layout.astro'
import { HeroImage } from '@/components/ui'
import Breadcrumbs from '@/components/Breadcrumbs.astro'
import PersonCard from '@/components/PersonCard.astro'
import img from '@/img/stock-images/library.jpg'
import data from '@/data/designated-candidates.json'
import { getCollection } from 'astro:content'

const people = await getCollection('people')

const imageImports = import.meta.glob(
  '../../../public/images/{content,people}/*.{jpg,png,jpeg}',
  { import: 'default' }
)

const positions = data.positions.map((p) => ({
  ...p,
  candidates: p.candidates.map((c) => people.find((p) => p.slug === c)?.data),
}))

const images = Object.fromEntries(
  await Promise.all(
    positions
      .flatMap((p) => p.candidates.map((c) => c?.img).filter((img) => img))
      .map(async (img) => {
        const imgImport = await imageImports['../../../public' + img]()
        return [img, imgImport]
      })
  )
)

const converter = new showdown.Converter()
const whatIsADesignatedCandidate = converter.makeHtml(
  data.whatIsADesignatedCandidate
)
---

<Layout title="Designated Candidates">
  <Breadcrumbs
    items={[
      {
        name: 'About',
        url: '/about',
      },
      {
        name: 'Designated Candidates',
        url: '/about/designated-candidates',
        current: true,
      },
    ]}
  />
  <HeroImage
    src={img}
    alt="The Irondequoit Library in front of a crisp autumn sky"
    minHeight={'small'}
  >
    <h1>Designated Candidates</h1>
  </HeroImage>
  <div
    class="container mx-auto max-w-3xl drop-shadow-2xl col-span-1 row-span-1 row-start-3 col-start-1"
  >
    <h2>What is a "Designated Candidate"?</h2>
    <div set:html={whatIsADesignatedCandidate} />

    <h2>Designated Candidates in {data.year}</h2>
    {
      positions.map((position) => {
        return (
          <div class="">
            <h3>{position.name}</h3>
            <ul class="grid grid-cols-2 gap-3 md:grid-cols-3 lg:grid-cols-4">
              {position.candidates.map((candidate) => {
                if (!candidate) return null
                console.log(candidate)
                const img = candidate.img && images[candidate.img]
                return (
                  <li>
                    <PersonCard
                      title={candidate.name}
                      img={img && { img, alt: `Headshot of ${candidate.name}` }}
                    />
                  </li>
                )
              })}
            </ul>
          </div>
        )
      })
    }
  </div>
</Layout>

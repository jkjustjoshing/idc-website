---
import { Navbar } from '@/components/Navbar'
import Footer from '@/components/Footer.astro'
import '@/base.css'
import { getImage } from 'astro:assets'
import favicon from './favicon.png'
import faviconTransparent from './favicon-transparent.png'

export interface Props {
  title?: string
  description?: string
}

const { title, description } = Astro.props

const titleString =
  (title ? title + ' - ' : '') + 'Irondequoit Democratic Committee'

const favicon32 = await getImage({
  src: faviconTransparent,
  width: 32,
  height: 32,
  format: 'png',
})
const sizes = [180, 192, 270] as const
const icons = Object.fromEntries(
  await Promise.all(
    sizes.map(
      async (size) =>
        [
          size,
          await getImage({
            src: favicon,
            width: size,
            height: size,
            format: 'png',
          }),
        ] as const
    )
  )
) as unknown as Record<(typeof sizes)[number], ImageMetadata>
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#1030BC" />
    <link rel="icon" type="image/png" href={favicon32.src} sizes="32x32" />
    <link rel="icon" type="image/png" href={icons[192].src} sizes="192x192" />
    <link rel="apple-touch-icon" href={icons[180].src} />
    <meta name="msapplication-TileImage" content={icons[270].src} />
    <title>{titleString}</title>
    <meta property="og:title" content={title} />
    <meta
      property="og:image"
      content={`https://www.irondequoitdemocrats.com${icons[270].src}`}
    />
    <meta property="og:image:width" content={'270'} />
    <meta property="og:image:height" content={'270'} />
    <meta property="og:site_name" content="Irondequoit Democratic Committee" />
    <meta
      name="description"
      content={description ||
        'Official website of the Irondequoit Democratic Committee'}
    />
    <link rel="stylesheet" type="text/css" href="/static/css/style.css" />
    <script
      src="https://identity.netlify.com/v1/netlify-identity-widget.js"
      async></script>
    <script>
      // Adds "netlifyIdentity" field to window typescript definition
      declare global {
        interface Window {
          netlifyIdentity: any
        }
      }

      if (window.netlifyIdentity) {
        window.netlifyIdentity.on('init', (user: any) => {
          if (!user) {
            window.netlifyIdentity.on('login', () => {
              document.location.href = '/admin/'
            })
          }
        })
      }
    </script>
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css?display=swap&family=DM+Sans:ital:300,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i&subset=latin,cyrillic-ext,latin-ext,cyrillic,greek-ext,greek,vietnamese"
      type="text/css"
      media="all"
    />
  </head>
  <body class="min-h-screen flex flex-col">
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-KFHB8LEWWT"
    ></script>
    <script>
      declare global {
        interface Window {
          dataLayer: any[]
        }
      }
      window.dataLayer = window.dataLayer || []
      function gtag(...args: any[]) {
        window.dataLayer.push(args)
      }
      gtag('js', new Date())

      gtag('config', 'G-KFHB8LEWWT')
    </script>
    <Navbar />
    <main class="flex-grow flex flex-col">
      <slot name="breadcrumbs" />
      <slot />
    </main>
    <Footer />
  </body>
</html>
